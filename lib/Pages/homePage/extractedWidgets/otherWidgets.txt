// import 'dart:typed_data';
// import 'package:image/image.dart' as img;
// import 'package:flutter/material.dart';
// import 'dart:io';
//
// import 'package:flutter/foundation.dart';
//
//
// import 'package:flutter/services.dart';
// // import 'dart:io';
// import 'dart:ui';
//
// // import 'package:awesome_dialog/awesome_dialog.dart';
// // import 'package:file_picker/file_picker.dart';
// // import 'package:flutter/foundation.dart';
// // import 'package:flutter/material.dart';
// import 'package:fluttertoast/fluttertoast.dart';
// // import 'package:image_picker/image_picker.dart';
// // import 'package:path_provider/path_provider.dart';
// // import 'package:percent_indicator/circular_percent_indicator.dart';
// // import 'package:permission_handler/permission_handler.dart';
// // import 'package:photo_video_compressor_last/Pages/src/panel.dart';
// //
// // import 'package:flutter/services.dart';
// // import 'package:video_compress/video_compress.dart';
// // import 'package:video_thumbnail/video_thumbnail.dart';
// //
// // // import '../../home_Page.dart';
// // import '../../home_Page.dart';
// // import '../../linear_percent_indicator.dart';
// // import '../engine/pagevoids.dart';
// import '../../linear_percent_indicator.dart';
// import '../home_Page.dart';
// // import '../linear_percent_indicator.dart';
// import '../engine/pagevoids.dart';
// import 'buttons.dart';

//
// class settingFloatingButton extends StatelessWidget {
//   const settingFloatingButton({
//     super.key,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return FloatingActionButton(
//       onPressed: () {
//         showDialog(
//           context: context,
//           builder: (context) {
//             return StatefulAlertDialog();
//           },
//         );
//       },
//       backgroundColor: Colors.white,
//       child: Icon(
//         Icons.settings,
//         color: Theme.of(context).primaryColor,
//       ),
//     );
//   }
// }
//
// class copyRightSection extends StatelessWidget {
//   const copyRightSection({
//     super.key,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return const Column(
//       crossAxisAlignment: CrossAxisAlignment.start,
//       children: <Widget>[
//         Text("About",
//             style: TextStyle(
//               fontWeight: FontWeight.w600,
//             )),
//         SizedBox(
//           height: 12.0,
//         ),
//         textForCopyRight(),
//       ],
//     );
//   }
// }
//
// class textForCopyRight extends StatelessWidget {
//   const textForCopyRight({
//     super.key,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return Text(
//       """ Copyright Â© RAMEZMALAK 2023/10/1
//
// All rights reserved. This application and its content are protected by copyright law. The content, including but not limited to text, graphics, images, and software code, is the property of RAMEZMALAK.CORP. Any unauthorized use or reproduction of this content without permission is prohibited.
//
// For inquiries regarding the use or licensing of this content, please contact ramezmfarouk@gmail.com.
//
// RAMEZMALAK.CORP reserves the right to take legal action against any unauthorized use or infringement of its intellectual property rights.
//
// Thank you for respecting our intellectual property.
//  """,
//       softWrap: true,
//     );
//   }
// }
//
// class aRowContainsSwipeUpText extends StatelessWidget {
//   const aRowContainsSwipeUpText({
//     super.key,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return Row(
//       mainAxisAlignment: MainAxisAlignment.center,
//       children: <Widget>[
//         swipeText(),
//       ],
//     );
//   }
// }
//
// class aRowWithBoxDecoration extends StatelessWidget {
//   const aRowWithBoxDecoration({
//     super.key,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return Row(
//       mainAxisAlignment: MainAxisAlignment.center,
//       children: <Widget>[
//         Container(
//           width: 30,
//           height: 5,
//           decoration: BoxDecoration(
//               color: Colors.grey[300],
//               borderRadius: BorderRadius.all(Radius.circular(12.0))),
//         ),
//       ],
//     );
//   }
// }
//
// class singleImageCompressor extends StatelessWidget {
//   const singleImageCompressor({
//     super.key,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return IconButton(
//       icon: Icon(Icons.photo),
//       color: Colors.white,
//       onPressed: () {
//         comprssorImageone();
//       },
//     );
//   }
// }
//
// class swipeText extends StatelessWidget {
//   const swipeText({
//     super.key,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return Text(
//       "swipe up to choose from specified folder",
//       style: TextStyle(
//         fontWeight: FontWeight.normal,
//         fontSize: 15.0,
//       ),
//     );
//   }
// }
//
//
// class textOfFileBeingCompressedName extends StatelessWidget {
//   const textOfFileBeingCompressedName({
//     super.key,
//     required this.fileUnderCompress,
//   });
//
//   final String? fileUnderCompress;
//
//   @override
//   Widget build(BuildContext context) {
//     return Text("file name ($fileUnderCompress)",
//         style: const TextStyle(color: Colors.black87));
//   }
// }
//
// class WaitingThumbNail extends StatelessWidget {
//   const WaitingThumbNail({
//     super.key,
//     required this.context,
//   });
//
//   final BuildContext context;
//
//   @override
//   Widget build(BuildContext context) {
//     return SizedBox(
//       width: MediaQuery.of(context).size.width,
//       height: MediaQuery.of(context).size.height / 2.5,
//       child: Image.asset(
//         "images/just-waitin-waitin.gif",
//         fit: BoxFit.contain,
//       ),
//     );
//   }
// }
//
// class linearPercentIndicator extends StatelessWidget {
//   const linearPercentIndicator({
//     super.key,
//     required this.context,
//     required this.video_Compressing_Percentage_Filtered,
//   });
//
//   final BuildContext context;
//   final String video_Compressing_Percentage_Filtered;
//
//   @override
//   Widget build(BuildContext context) {
//     return LinearPercentIndicator(
//       width: MediaQuery.of(context).size.width - 50,
//       // animation: true,
//       lineHeight: 20.0,
//       // animationDuration: 1000,
//       percent: double.parse("0.$video_Compressing_Percentage_Filtered"),
//       center: Text("%$video_Compressing_Percentage_Filtered"),
//       linearStrokeCap: LinearStrokeCap.roundAll,
//       progressColor: Colors.green,
//     );
//   }
// }
//
//
//
//
// class ThumbnailViewWidget extends StatefulWidget {
//   final String imagePath;
//
//   ThumbnailViewWidget({required this.imagePath});
//
//   @override
//   State<ThumbnailViewWidget> createState() => _ThumbnailViewWidgetState();
// }
//
// class _ThumbnailViewWidgetState extends State<ThumbnailViewWidget> {
//   final double thumbnailSize = 100.0;
//
//   @override
//   Widget build(BuildContext context) {
//     return Center(
//       child: FutureBuilder<Uint8List>(
//         future: _generateThumbnail(),
//         builder: (context, snapshot) {
//           if (snapshot.connectionState == ConnectionState.done &&
//               snapshot.hasData) {
//             return Container(
//               width: MediaQuery.of(context).size.width,
//               height: MediaQuery.of(context).size.height / 2.5,
//               child: Image.memory(
//                 snapshot.data!,
//                 width: thumbnailSize,
//                 height: thumbnailSize,
//                 fit: BoxFit.cover,
//               ),
//             );
//           } else {
//             return SizedBox(
//                 width: MediaQuery.of(context).size.width,
//                 height: MediaQuery.of(context).size.height / 2.5,
//                 child: Center(child: CircularProgressIndicator()));
//           }
//         },
//       ),
//     );
//   }
//
//   Future<Uint8List> _generateThumbnail() async {
//     final File imageFile = File(widget.imagePath);
//     final Uint8List bytes = await imageFile.readAsBytes();
//
//     // Resize the image using the image package
//     final img.Image originalImage = img.decodeImage(bytes)!;
//     final img.Image thumbnail =
//     img.copyResize(originalImage, width: 100, height: 100);
//
//     // Convert the resized image back to bytes
//     return Uint8List.fromList(img.encodeJpg(thumbnail));
//   }
// }
//
//
//
// class rowOfTextOfCompressedFilesNum extends StatelessWidget {
//   const rowOfTextOfCompressedFilesNum(
//       {super.key,
//         this.OnPressed,
//         required this.compressorIsStatus,
//         required this.compressed,
//         required this.total_Files_Length});
//   final void Function()? OnPressed;
//   final String compressorIsStatus;
//   final String compressed;
//   final String total_Files_Length;
//   @override
//   Widget build(BuildContext context) {
//     return Row(
//       mainAxisAlignment: MainAxisAlignment.center,
//       children: [
//         if (compressorIsStatus == "1")
//           Text(
//             '$compressed files compressed from $total_Files_Length',
//             style: const TextStyle(
//                 color: Colors.black87,
//                 fontSize: 15,
//                 fontWeight: FontWeight.w400),
//           )
//         else if (compressorIsStatus == "0")
//           Row(
//             children: [
//               Text(
//                 'camera files: $total_Files_Length',
//                 style: TextStyle(
//                     color: Colors.black87,
//                     fontSize: 15,
//                     fontWeight: FontWeight.w400),
//               ),
//               reloadButton(OnPressed: OnPressed)
//             ],
//           )
//         else if (compressorIsStatus == "00")
//             Row(
//               children: [
//                 Text(
//                   '$compressed files compressed from $total_Files_Length',
//                   style: const TextStyle(
//                       color: Colors.black87,
//                       fontSize: 15,
//                       fontWeight: FontWeight.w400),
//                 ),
//                 reloadButton(OnPressed: OnPressed)
//               ],
//             ),
//         const SizedBox(
//           width: 20,
//         ),
//       ],
//     );
//     ;
//   }
// }
//
//
//
// class linearPercentIndicatorWithPadding extends StatelessWidget {
//   const linearPercentIndicatorWithPadding({
//     super.key,
//     required this.context,
//     required this.video_Compressing_Percentage_Filtered,
//   });
//
//   final BuildContext context;
//   final String video_Compressing_Percentage_Filtered;
//
//   @override
//   Widget build(BuildContext context) {
//     return Padding(
//       padding: const EdgeInsets.only(top: 7, right: 7, left: 7, bottom: 7),
//       child: linearPercentIndicator(
//           context: context,
//           video_Compressing_Percentage_Filtered:
//           video_Compressing_Percentage_Filtered),
//     );
//   }
// }
//
// class pictureThumbNail extends StatelessWidget {
//   const pictureThumbNail({
//     super.key,
//     required this.context,
//     required this.thumbnail,
//   });
//
//   final BuildContext context;
//   final thumbnail;
//
//   @override
//   Widget build(BuildContext context) {
//     return SizedBox(
//       width: MediaQuery.of(context).size.width,
//       height: MediaQuery.of(context).size.height / 2.5,
//       child: Image.file(
//         File(thumbnail),
//         fit: BoxFit.contain,
//       ),
//     );
//   }
// }
//
// class videoThumbnail extends StatelessWidget {
//   const videoThumbnail({
//     super.key,
//     required this.thumbnailVideoPath,
//     required this.context,
//   });
//
//   final Uint8List? thumbnailVideoPath;
//   final BuildContext context;
//
//   @override
//   Widget build(BuildContext context) {
//     return Image.memory(
//       thumbnailVideoPath!,
//       width: MediaQuery.of(context).size.width,
//       height: MediaQuery.of(context).size.height / 2.5,
//       fit: BoxFit.contain,
//     );
//   }
// }
//
// Future<void> showTost(text) async {
//   Fluttertoast.showToast(
//     msg: text,
//     toastLength: Toast.LENGTH_SHORT, // Duration of the toast
//     gravity: ToastGravity.BOTTOM, // Location where the toast should appear
//     timeInSecForIosWeb: 1, // Duration for iOS
//     backgroundColor: Colors.black, // Background color of the toast
//     textColor: Colors.white, // Text color of the toast message
//     fontSize: 14, // Font size of the toast message
//   );
// }